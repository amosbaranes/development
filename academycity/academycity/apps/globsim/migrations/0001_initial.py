# Generated by Django 2.1.10 on 2019-09-11 18:20

import cms.models.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import filer.fields.image
import parler.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cms', '0022_auto_20180620_1551'),
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BSInstructor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address', models.CharField(blank=True, default='', max_length=100)),
                ('bio', cms.models.fields.PlaceholderField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bio_bs_instructor', slotname='instructor_bio', to='cms.Placeholder')),
                ('bio_short', cms.models.fields.PlaceholderField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bio_short_bs_instructor', slotname='instructor_bio_short', to='cms.Placeholder')),
            ],
            options={
                'verbose_name': 'instructor',
                'verbose_name_plural': 'instructors',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='BSInstructorTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(db_index=True, default='', help_text='Please supply the instructor name.', max_length=128, verbose_name='name')),
                ('slug', models.SlugField(default='', help_text='Please supply the department slug.', max_length=128, verbose_name='slug')),
                ('master', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='globsim.BSInstructor')),
            ],
            options={
                'verbose_name': 'instructor Translation',
                'db_table': 'globsim_bsinstructor_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ChartOfAccounts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default='0000000000', max_length=10)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='children', to='globsim.ChartOfAccounts')),
            ],
            options={
                'verbose_name': 'chart_of_account',
                'verbose_name_plural': 'chart_of_accounts',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ChartOfAccountsTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('account', models.CharField(db_index=True, default='', help_text='Please supply the account name.', max_length=128, verbose_name='account')),
                ('slug', models.SlugField(default='', help_text='Please supply the department slug.', max_length=128, verbose_name='slug')),
                ('master', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='globsim.ChartOfAccounts')),
            ],
            options={
                'verbose_name': 'chart_of_account Translation',
                'db_table': 'globsim_chartofaccounts_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CountryCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, default='', max_length=128)),
                ('country_code', models.CharField(blank=True, default='', max_length=2)),
                ('country', models.CharField(blank=True, default='', max_length=128)),
            ],
            options={
                'verbose_name': 'city',
                'verbose_name_plural': 'cities',
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('name', models.CharField(default='', help_text='Please supply the product name.', max_length=128, verbose_name='name')),
                ('number_of_periods', models.IntegerField(default=9)),
                ('number_of_teams', models.IntegerField(default=7)),
                ('number_of_students', models.IntegerField(default=35)),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.IntegerField(choices=[(0, 'Created'), (5, 'Approved'), (10, 'Student Registration'), (20, 'End Registration'), (30, 'Running'), (100, 'Finished')], default=0)),
            ],
            options={
                'verbose_name': 'game',
                'verbose_name_plural': 'games',
            },
        ),
        migrations.CreateModel(
            name='GeneralLedger',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=10)),
                ('transaction', models.PositiveIntegerField()),
                ('Amount', models.DecimalField(decimal_places=2, max_digits=18)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cofa_gls', to='globsim.ChartOfAccounts')),
            ],
            options={
                'verbose_name': 'general ledger',
                'verbose_name_plural': 'general ledgers',
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, default='Academy City', max_length=100)),
                ('website', models.URLField()),
                ('type', models.IntegerField(choices=[(0, 'Other'), (1, 'University'), (2, 'College'), (3, 'Company'), (4, 'Private')], default=1)),
                ('address', models.CharField(blank=True, default='', max_length=100)),
                ('country_city', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='cc_institutions', to='globsim.CountryCity')),
                ('description', cms.models.fields.PlaceholderField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='id_l', slotname='participant_bio', to='cms.Placeholder')),
                ('description_short', cms.models.fields.PlaceholderField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='id_s', slotname='participant_bio_short', to='cms.Placeholder')),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address', models.CharField(blank=True, default='', max_length=100)),
                ('bio', cms.models.fields.PlaceholderField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pb_l', slotname='participant_bio', to='cms.Placeholder')),
                ('bio_short', cms.models.fields.PlaceholderField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pb_s', slotname='participant_bio_short', to='cms.Placeholder')),
                ('country_city', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='cc_participates', to='globsim.CountryCity')),
                ('image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.FILER_IMAGE_MODEL)),
                ('institution', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='globsim.Institution')),
            ],
            options={
                'verbose_name': 'participant',
                'verbose_name_plural': 'participants',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ParticipantTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(db_index=True, default='', help_text='Please supply participate name.', max_length=128, verbose_name='name')),
                ('slug', models.SlugField(default='', help_text='Please supply the participate slug.', max_length=128, verbose_name='slug')),
                ('master', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='globsim.Participant')),
            ],
            options={
                'verbose_name': 'participant Translation',
                'db_table': 'globsim_participant_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_start', models.DateTimeField(auto_now=True)),
                ('period_end', models.DateTimeField(auto_now=True)),
                ('period_number', models.PositiveIntegerField()),
                ('is_current', models.BooleanField(default=False)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='periods', to='globsim.Game')),
            ],
            options={
                'verbose_name': 'period',
                'verbose_name_plural': 'periods',
            },
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, default='', help_text='Please supply the plant name.', max_length=128, verbose_name='name')),
                ('image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.FILER_IMAGE_MODEL)),
            ],
            options={
                'verbose_name': 'plant',
                'verbose_name_plural': 'plants',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', help_text='Please supply the product name.', max_length=128, verbose_name='name')),
                ('image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.FILER_IMAGE_MODEL)),
            ],
            options={
                'verbose_name': 'product',
                'verbose_name_plural': 'products',
            },
        ),
        migrations.CreateModel(
            name='RDProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, default='', help_text='Please supply the R&D project name.', max_length=128, verbose_name='name')),
                ('desired_primary_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('desired_scu', models.DecimalField(decimal_places=2, max_digits=10)),
                ('rd_expense', models.DecimalField(decimal_places=2, max_digits=10)),
                ('period', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='period_rd_projects', to='globsim.Period')),
            ],
            options={
                'verbose_name': 'research and development project',
                'verbose_name_plural': 'research and development projects',
            },
        ),
        migrations.CreateModel(
            name='RDProjectAttributes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('attribute', models.IntegerField(choices=[(0, 'Style'), (10, 'Engine'), (20, 'Warranty')], default=1)),
                ('value', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('rd_project', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='rd_attributes', to='globsim.RDProject')),
            ],
            options={
                'verbose_name': 'research and development attribute',
                'verbose_name_plural': 'research and development attributes',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', help_text='Please supply the product name.', max_length=128, verbose_name='name')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='globsim.Game')),
                ('image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.FILER_IMAGE_MODEL)),
            ],
            options={
                'verbose_name': 'team',
                'verbose_name_plural': 'teams',
            },
        ),
        migrations.CreateModel(
            name='TeamGrades',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(0, 'Other'), (1, 'Preparation'), (2, 'Strategic Plan'), (3, 'Group Meeting'), (4, 'General Impression')], default=1)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_grades', to='globsim.Team')),
            ],
            options={
                'verbose_name': 'team_grade',
                'verbose_name_plural': 'team grades',
            },
        ),
        migrations.CreateModel(
            name='TrialBalance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Amount', models.DecimalField(decimal_places=2, max_digits=18)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cofa_tbs', to='globsim.ChartOfAccounts')),
            ],
            options={
                'verbose_name': 'product',
                'verbose_name_plural': 'products',
            },
        ),
        migrations.AddField(
            model_name='rdproject',
            name='team',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='rd_projects', to='globsim.Team'),
        ),
        migrations.AddField(
            model_name='participant',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='globsim.Team'),
        ),
        migrations.AddField(
            model_name='participant',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='participant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bsinstructor',
            name='country_city',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='cc_bs_instructors', to='globsim.CountryCity'),
        ),
        migrations.AddField(
            model_name='bsinstructor',
            name='game',
            field=models.ManyToManyField(related_name='game_bsinstructors', to='globsim.Game'),
        ),
        migrations.AddField(
            model_name='bsinstructor',
            name='image',
            field=filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.FILER_IMAGE_MODEL),
        ),
        migrations.AddField(
            model_name='bsinstructor',
            name='institution',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='globsim.Institution'),
        ),
        migrations.AddField(
            model_name='bsinstructor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_bsinstructor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='participanttranslation',
            unique_together={('language_code', 'master')},
        ),
        migrations.AlterUniqueTogether(
            name='chartofaccountstranslation',
            unique_together={('language_code', 'master')},
        ),
        migrations.AlterUniqueTogether(
            name='bsinstructortranslation',
            unique_together={('language_code', 'master')},
        ),
    ]
